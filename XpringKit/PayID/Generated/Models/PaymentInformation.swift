//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

public class PaymentInformation: APIModel {

    public var addresses: [PayIDAddress]

    public var memo: String?

    public var payId: String?

    public var proofOfControlSignature: String?

    public init(addresses: [PayIDAddress], memo: String? = nil, payId: String? = nil, proofOfControlSignature: String? = nil) {
        self.addresses = addresses
        self.memo = memo
        self.payId = payId
        self.proofOfControlSignature = proofOfControlSignature
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: StringCodingKey.self)

        addresses = try container.decodeArray("addresses")
        memo = try container.decodeIfPresent("memo")
        payId = try container.decodeIfPresent("payId")
        proofOfControlSignature = try container.decodeIfPresent("proofOfControlSignature")
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: StringCodingKey.self)

        try container.encode(addresses, forKey: "addresses")
        try container.encodeIfPresent(memo, forKey: "memo")
        try container.encodeIfPresent(payId, forKey: "payId")
        try container.encodeIfPresent(proofOfControlSignature, forKey: "proofOfControlSignature")
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? PaymentInformation else { return false }
      guard self.addresses == object.addresses else { return false }
      guard self.memo == object.memo else { return false }
      guard self.payId == object.payId else { return false }
      guard self.proofOfControlSignature == object.proofOfControlSignature else { return false }
      return true
    }

    public static func == (lhs: PaymentInformation, rhs: PaymentInformation) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
