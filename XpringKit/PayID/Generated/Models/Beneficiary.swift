//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

public class Beneficiary: APIModel {

    public var institutionName: String

    public var accountId: String?

    public var userLegalName: String?

    public var userPhysicalAddress: String?

    public init(institutionName: String, accountId: String? = nil, userLegalName: String? = nil, userPhysicalAddress: String? = nil) {
        self.institutionName = institutionName
        self.accountId = accountId
        self.userLegalName = userLegalName
        self.userPhysicalAddress = userPhysicalAddress
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: StringCodingKey.self)

        institutionName = try container.decode("institutionName")
        accountId = try container.decodeIfPresent("accountId")
        userLegalName = try container.decodeIfPresent("userLegalName")
        userPhysicalAddress = try container.decodeIfPresent("userPhysicalAddress")
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: StringCodingKey.self)

        try container.encode(institutionName, forKey: "institutionName")
        try container.encodeIfPresent(accountId, forKey: "accountId")
        try container.encodeIfPresent(userLegalName, forKey: "userLegalName")
        try container.encodeIfPresent(userPhysicalAddress, forKey: "userPhysicalAddress")
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? Beneficiary else { return false }
      guard self.institutionName == object.institutionName else { return false }
      guard self.accountId == object.accountId else { return false }
      guard self.userLegalName == object.userLegalName else { return false }
      guard self.userPhysicalAddress == object.userPhysicalAddress else { return false }
      return true
    }

    public static func == (lhs: Beneficiary, rhs: Beneficiary) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
