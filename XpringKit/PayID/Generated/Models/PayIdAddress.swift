//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

public class PayIdAddress: APIModel {

    public var paymentNetwork: String

    public var addressDetailsType: String

    public var addressDetails: CryptoAddressDetails

    public var environment: String?

    public init(paymentNetwork: String, addressDetailsType: String, addressDetails: CryptoAddressDetails, environment: String? = nil) {
        self.paymentNetwork = paymentNetwork
        self.addressDetailsType = addressDetailsType
        self.addressDetails = addressDetails
        self.environment = environment
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: StringCodingKey.self)

        paymentNetwork = try container.decode("paymentNetwork")
        addressDetailsType = try container.decode("addressDetailsType")
        addressDetails = try container.decode("addressDetails")
        environment = try container.decodeIfPresent("environment")
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: StringCodingKey.self)

        try container.encode(paymentNetwork, forKey: "paymentNetwork")
        try container.encode(addressDetailsType, forKey: "addressDetailsType")
        try container.encode(addressDetails, forKey: "addressDetails")
        try container.encodeIfPresent(environment, forKey: "environment")
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? PayIdAddress else { return false }
      guard self.paymentNetwork == object.paymentNetwork else { return false }
      guard self.addressDetailsType == object.addressDetailsType else { return false }
      guard self.addressDetails == object.addressDetails else { return false }
      guard self.environment == object.environment else { return false }
      return true
    }

    public static func == (lhs: PayIdAddress, rhs: PayIdAddress) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
